@page "/login"
@inject IDataService DataService
@inject NavigationManager Nav

<h3 class="text-center mb-4">Login</h3>

<div class="container" style="max-width: 400px;">
    <div class="form-group mb-3">
        <label>Username</label>
        <input class="form-control" @bind="Username" />
    </div>

    <div class="form-group mb-3">
        <label>Password</label>
        <input type="password" class="form-control" @bind="Password" />
    </div>

    <div class="d-grid gap-2 mb-2">
        <button class="btn btn-primary" @onclick="LoginUser">Login</button>
        <button class="btn btn-secondary" @onclick="GoToSignup">Sign Up</button>
    </div>

    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
            <div class="alert alert-danger mt-2">@ErrorMessage</div>
    }
</div>

@code {
    private string Username = string.Empty;
    private string Password = string.Empty;
    private string ErrorMessage = string.Empty;

    private async Task LoginUser()
    {
        var settings = await DataService.LoadUserSettingsAsync();

        if (settings is not null && settings.Username == Username && settings.Password == Password)
        {
            settings.IsLoggedIn = true;
            await DataService.SaveUserSettingsAsync(settings);
            Nav.NavigateTo("/dashboard", forceLoad: true);
        }
        else
        {
            ErrorMessage = "Invalid username or password.";
        }
    }

    private void GoToSignup()
    {
        Nav.NavigateTo("/signup");
    }
}