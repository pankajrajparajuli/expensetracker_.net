@page "/addtransaction"
@inject IDataService DataService
@inject NavigationManager Nav
@using expensetracker.Models

<h3 class="text-center mb-4">Add New Transaction</h3>

<div class="container" style="max-width: 500px;">
    <div class="form-group mb-3">
        <label>Title</label>
        <input class="form-control" @bind="Title" />
    </div>

    <div class="form-group mb-3">
        <label>Amount</label>
        <input type="number" class="form-control" @bind="Amount" />
    </div>

    <div class="form-group mb-3">
        <label>Type</label>
        <select class="form-control" @bind="SelectedType">
            <option disabled value="">-- Select --</option>
            <option>Credit</option>
            <option>Debit</option>
            <option>Debt</option>
        </select>
    </div>

    @if (SelectedType == "Debt")
    {
            <div class="form-group mb-3">
                <label>Debt Source</label>
                <input class="form-control" @bind="DebtSource" />
            </div>

            <div class="form-group mb-3">
                <label>Due Date</label>
                <input type="date" class="form-control" @bind="DueDate" />
            </div>
    }

    <div class="form-group mb-3">
        <label>Category</label>
        <select class="form-control" @bind="SelectedCategory">
            <option disabled value="">-- Select Category --</option>
            <option>Rent</option>
            <option>Groceries</option>
            <option>Utilities</option>
            <option>Entertainment</option>
            <option>Fuel</option>
            <option>Salary</option>
            <option>Other</option>
        </select>
    </div>

    <div class="form-group mb-3">
        <label>Note (Optional)</label>
        <textarea class="form-control" @bind="Note"></textarea>
    </div>

    <button class="btn btn-primary w-100" @onclick="SaveTransaction">Save Transaction</button>

    @if (!string.IsNullOrWhiteSpace(Message))
    {
            <div class="alert alert-info mt-3">@Message</div>
    }
</div>

@code {
    private string Title = string.Empty;
    private decimal Amount;
    private string SelectedType = string.Empty;
    private string SelectedCategory = string.Empty;
    private string Note = string.Empty;
    private string? DebtSource;
    private DateTime? DueDate;
    private string Message = string.Empty;

    private List<Transaction> Transactions = new();

    protected override async Task OnInitializedAsync()
    {
        Transactions = await DataService.LoadTransactionsAsync();
    }

    private async Task SaveTransaction()
    {
        if (string.IsNullOrWhiteSpace(Title) || Amount <= 0 || string.IsNullOrWhiteSpace(SelectedType))
        {
            Message = "Please fill in all required fields.";
            return;
        }

        var settings = await DataService.LoadUserSettingsAsync();
        if (settings == null)
        {
            Message = "User not logged in.";
            return;
        }

        if (SelectedType == "Debit")
        {
            var balance = Transactions
                .Where(t => t.Username == settings.Username && t.Type == TransactionType.Credit).Sum(t => t.Amount)
                - Transactions
                .Where(t => t.Username == settings.Username && t.Type == TransactionType.Debit).Sum(t => t.Amount);

            if (Amount > balance)
            {
                Message = "Insufficient balance for this debit.";
                return;
            }
        }

        var transaction = new Transaction
            {
                Username = settings.Username,
                Id = Transactions.Count + 1,
                Title = Title,
                Amount = Amount,
                Type = Enum.Parse<TransactionType>(SelectedType),
                Note = Note,
                Tags = new List<string> { SelectedCategory },
                DebtSource = SelectedType == "Debt" ? DebtSource : null,
                DueDate = SelectedType == "Debt" ? DueDate : null,
                IsDebtCleared = SelectedType != "Debt",
                Date = DateTime.Now
            };

        Transactions.Add(transaction);
        await DataService.SaveTransactionsAsync(Transactions);
        Message = "Transaction added successfully!";
        Nav.NavigateTo("/viewtransactions", true);
    }

}