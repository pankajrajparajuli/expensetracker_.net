@page "/signup"
@using expensetracker.Models
@inject IDataService DataService
@inject NavigationManager Nav

<h3 class="text-center mb-4">Create a New Account</h3>

<div class="container shadow rounded p-4 bg-white" style="max-width: 400px;">
    <div class="form-group mb-3">
        <label for="username">Username</label>
        <input id="username" class="form-control" @bind="Username" placeholder="Choose a username" />
    </div>

    <div class="form-group mb-3">
        <label for="password">Password</label>
        <input id="password" type="password" class="form-control" @bind="Password" placeholder="Create a password" />
    </div>

    <div class="form-group mb-3">
        <label for="currency">Preferred Currency</label>
        <select id="currency" class="form-control" @bind="Currency">
            <option value="USD">USD</option>
            <option value="EUR">EUR</option>
            <option value="NPR">NPR</option>
            <option value="INR">INR</option>
        </select>
    </div>

    <div class="d-grid gap-2 mb-2">
        <button class="btn btn-success" @onclick="RegisterUser">Sign Up</button>
        <button class="btn btn-outline-secondary" @onclick="GoToLogin">Back to Login</button>
    </div>

    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger mt-3" role="alert">@ErrorMessage</div>
    }
</div>

@code {
    private string Username = string.Empty;
    private string Password = string.Empty;
    private string Currency = "USD";
    private string ErrorMessage = string.Empty;

    private async Task RegisterUser()
    {
        ErrorMessage = string.Empty;

        if (string.IsNullOrWhiteSpace(Username) || string.IsNullOrWhiteSpace(Password))
        {
            ErrorMessage = "Username and password are required.";
            return;
        }

        var newUser = new UserSettings
            {
                Username = Username.Trim(),
                Password = Password,
                Currency = Currency
            };

        var success = await DataService.RegisterUserAsync(newUser);
        if (success)
        {
            Nav.NavigateTo("/dashboard");
        }
        else
        {
            ErrorMessage = "Username already exists. Please choose a different one.";
        }
    }

    private void GoToLogin()
    {
        Nav.NavigateTo("/login");
    }
}
